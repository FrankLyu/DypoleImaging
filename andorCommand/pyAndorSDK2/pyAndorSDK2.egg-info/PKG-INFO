Metadata-Version: 1.1
Name: pyAndorSDK2
Version: 1.0.0.dev1
Summary: Provides a wrapper for the Andor SDK2 API
Home-page: http://my.andor.com/user/
Author: Andor CCD team
Author-email: row_productsupport@andor.com
License: Andor internal
Description: Andor SDK2 python wrapper
        =========================
        
        API wrapper for Chameleon SDK3 from Andor.
        Supported platforms: python 3.5, python 3.6
        
        ----
        
        Beta test python SDK2 wrapper
        Contains wrapper interface and latest SDK libraries
        Note the new package name to use in an import; all other wrapper use should be the same. (You can alias the import if you absolutely have to.)
        
        Tested on Win 7, Python 3.5.1 32- and 64-bit
        Known issues with some Windows 10, some CentOS 7
        
        Installation depending on your python installation:
        
        Open command console (Windows):
        > pip3 install .
        > python3 â€“m pip install .
        
        Also
        > pip3 list
        > pip3 uninstall pyAndorSDK2
        
        'sudo' as necessary for Linux
        
        Any errors or suggestions, please report.
        
        
        ----
        
        
        Example Usage:
        
        Example Code                                           |   Description
        val = cam.FeatureName                                  |   Gets the value of FeatureName
        cam.FeatureName = val                                  |   Sets the FeatureName to the value held by the "val" variable
        val = cam.CmdFeatureName()                             |   Executes the Command Feature with the name CmdFeatureName
        val = cam.max_FeatureName                              |   Gets the maximum value of FeatureName
        val = cam.min_FeatureName                              |   Gets the minimum value of FeatureName
        opts = cam.options_EnumFeatureName                     |   Gets the list of options available for the EnumFeatureName feature
        avail = cam.is_available_EnumFeatureName("EnumEntry")  |   Gets the availablity of a given EnumEntry for an EnumFeature
        feat_type = cam.type_FeatureName                       |   Gets the feature type of FeatureName (dictated by andor_strings.py)
        
        img = cam.acquire()                                    | Acquires an image returns an Acquisition object
        imgs = cam.acquire_series()                            | Acquires <FrameCount> images and returns a list of Acquisition objects
        
        With both the acquire and acquire_series it is possible to pass in features and values you wish to assign for the acquisition(s), and a timeout value for the acquisition. E.g.:
        
        img = cam.acquire(("ElectronicShutteringMode","Rolling"))
        imgs = cam.acquire_series(("CycleMode","Fixed"),("FrameCount",10),timeout=5000)
        
        
        The Acquisition objects can be interected with in the following ways:
        
        img.image()                            | Returns a numpy array of the image acquired
        imgs[2].save("/path/to/file/filename") | Saves the image to the path '/path/to/file' and file name "filename.fits"
        img.show()                             | Displays the image using matplotlib
        
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Build Tools
Classifier: License :: OSI Approved :: Andor internal
Classifier: Programming Language :: Python :: 3.6
